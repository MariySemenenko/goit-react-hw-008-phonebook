{"version":3,"file":"static/js/238.560ed4b2.chunk.js","mappings":"gPAGaA,EAAMC,EAAAA,EAAAA,IAAH,4IAQHC,EAAKD,EAAAA,EAAAA,GAAH,mEAKFE,EAAKF,EAAAA,EAAAA,GAAH,gHAOFG,EAAQH,EAAAA,EAAAA,IAAH,kEAILI,EAAOJ,EAAAA,EAAAA,KAAH,kE,UCtBJK,EAAiB,SAAC,GAAD,SAAGC,SAAYC,KAAf,EAEjBC,EAAe,SAAC,GAAD,SAAGC,MAAH,EAEfC,EAAgB,SAAC,GAAD,SAAEJ,SAAWK,SAAb,EAChBC,EAAc,SAAC,GAAD,SAAEN,SAAWO,KAAb,EAGdC,EAAwB,SAAC,GAAqC,IAAvBP,EAAsB,EAAlCD,SAAYC,MAASE,EAAa,EAAbA,OAC3D,OAAKA,EAGEF,EAAME,QAAO,SAAAM,GAAI,OACtBA,EAAKC,KAAKC,cAAcC,SAAST,EAAOQ,cADlB,IAFfV,CAKV,E,SCfYY,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,IAAYT,GAuBpC,OACE,+BACE,UAACV,EAAD,CAAMoB,SAvBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTZ,EAAOW,EAAKE,SAASb,KAAKc,MAC1BC,EAASJ,EAAKE,SAASE,OAAOD,MAEZR,EAAgBU,MACtC,SAAAC,GAAO,OACLA,EAAQjB,KAAKC,gBAAkBD,EAAKC,eACpCgB,EAAQF,SAAWA,CAFd,KAMPG,MAAM,GAAD,OAAIlB,EAAJ,eAAee,EAAf,4BACLJ,EAAKQ,UAELf,GAASgB,EAAAA,EAAAA,IAAW,CAAEpB,KAAAA,EAAMe,OAAAA,KAC5BJ,EAAKQ,QAER,EAIG,WACE,qCAEE,kBACEE,KAAK,OACLrB,KAAK,OACLsB,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,QAIZ,uCAEE,kBACEH,KAAK,MACLrB,KAAK,SACLsB,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,QAIZ,mBAAQH,KAAK,SAAb,6BAIP,E,UCpDYI,EAAS,WAEpB,IAAMhC,GAASc,EAAAA,EAAAA,IAAYf,GACrBY,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAClB,EAAD,WACE,sDAEE,kBACEkC,KAAK,OACLP,MAAOrB,EACPiC,SAAU,SAAAjB,GAAC,OAAIL,GAASuB,EAAAA,EAAAA,GAAUlB,EAAEmB,cAAcd,MAAMe,QAA7C,QAKpB,EChBYC,EAAc,WACzB,IAAMC,GAAexB,EAAAA,EAAAA,IAAYT,GAE3BM,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACnB,EAAD,UAEG6C,EAAaC,KACZ,gBACIhC,EADJ,EACIA,KAAMiC,EADV,EACUA,MAAOC,EADjB,EACiBA,GADjB,OAGE,2BACE,yBACGlC,EADH,KACWiC,MAGX,mBAAQZ,KAAK,SAASc,QAAS,kBAAM/B,GAASgC,EAAAA,EAAAA,IAAcF,GAA7B,EAA/B,sBALOA,EAHX,KAgBP,ECjBc,SAASG,IAEtB,IAAM/C,GAAWiB,EAAAA,EAAAA,IAAYlB,GACvBM,GAAYY,EAAAA,EAAAA,IAAYb,GACxBG,GAAQU,EAAAA,EAAAA,IAAYX,GAEpBQ,GAAWC,EAAAA,EAAAA,MAOjB,OANAiC,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,KAKF,+BACE,+BACE,UAACrB,EAAD,YACE,SAACoB,EAAD,IACCR,IAAa,mCACbE,IAAS,uBAAIA,KACd,UAACZ,EAAD,uBAAcK,EAASkD,WACvB,SAACf,EAAD,IACCnC,EAASkD,QAAS,SAACV,EAAD,KAAkB,0DAK9C,C","sources":["components/StyledApp.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["\nimport styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 600px;\n  background-color: gainsboro;\n  padding-top: 50px;\n`;\n\nexport const H2 = styled.h2`\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding-bottom: 50px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const Label = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\nexport const Form = styled.form`\n  margin: 0 auto;\n  text-align: center;\n`;","\n//доступ до глобального стейту\n//створюю 2 селекти які повертають дані (items та filter)\n\n// зберігаються контакти які передаються в App\nexport const selectContacts = ({ contacts: { items } }) => items;\n//передаю selectFilter в форму\nexport const selectFilter = ({ filter }) => filter;\n\nexport const selectLoading = ({contacts: {isLoading}}) => isLoading;\nexport const selectError = ({contacts: {error}}) => error;\n\n//створюю масив відфільтрованних контактів та передаю у ContactList та ContactForm\nexport const selectVisibleContacts = ({ contacts: { items }, filter }) => {\n  if (!filter) {\n    return items;\n  }\n  return items.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import { Form } from '../StyledApp.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const existingContact = visibleContacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n\n    if (existingContact) {\n      alert(`${name} or ${number} is already in contacts`);\n      form.reset();\n    } else {\n      dispatch(addContact({ name, number }));\n      form.reset();\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add Contact</button>\n      </Form>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label } from '../StyledApp.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\n//тут виконується пошук імені в телефонній книзі\n\nexport const Filter = () => {\n\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  \n  return (\n    <Label>\n      <label>\n        Find contacts by name\n        <input\n          type=\"name\"\n          value={filter}\n          onChange={e => dispatch(setFilter(e.currentTarget.value.trim()))}\n        />\n      </label>\n    </Label>\n  );\n};\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Ul } from '../StyledApp.styled';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\n// відображаю список контактів і маю можливість видаляти контакт зі списку\n\nexport const ContactList = () => {\n  const contactsList = useSelector(selectVisibleContacts)\n  //через dispatch видаляю контакти\n  const dispatch = useDispatch()\n  return (\n    <Ul>\n\n      {contactsList.map(\n        (\n          { name, phone, id } // кожен контакт має властивість name, number, id\n        ) => (\n          <li key={id}>\n            <p>\n              {name}: {phone}\n            </p>\n\n            <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </button>\n          </li>\n        )\n      )}\n    </Ul>\n  );\n};\n\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Div, H2 } from '../components/StyledApp.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport {\n  selectContacts,\n  selectError,\n  selectLoading,\n} from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  //додаю контакти з файлу  selectors.js\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  //  console.log(contacts)\n\n  return (\n    <>\n      <>\n        <Div>\n          <ContactForm />\n          {isLoading && <p>Loading</p>}\n          {error && <p>{error}</p>}\n          <H2>Contacts {contacts.length}</H2>\n          <Filter />\n          {contacts.length ? <ContactList /> : <p>No contacts in phonebook</p>}\n        </Div>\n      </>\n    </>\n  );\n}\n"],"names":["Div","styled","H2","Ul","Label","Form","selectContacts","contacts","items","selectFilter","filter","selectLoading","isLoading","selectError","error","selectVisibleContacts","item","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","visibleContacts","useSelector","onSubmit","e","preventDefault","form","target","elements","value","number","find","contact","alert","reset","addContact","type","pattern","title","required","Filter","onChange","setFilter","currentTarget","trim","ContactList","contactsList","map","phone","id","onClick","deleteContact","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}