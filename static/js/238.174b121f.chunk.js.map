{"version":3,"file":"static/js/238.174b121f.chunk.js","mappings":"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","sources":["components/StyledApp.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["\nimport styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 600px;\n  background-color: gainsboro;\n  padding-top: 50px;\n`;\n\nexport const H2 = styled.h2`\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding-bottom: 50px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const Label = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\nexport const Form = styled.form`\n  margin: 0 auto;\n  text-align: center;\n`;","\n//доступ до глобального стейту\n//створюю 2 селекти які повертають дані (items та filter)\n\n// зберігаються контакти які передаються в App\nexport const selectContacts = ({ contacts: { items } }) => items;\n//передаю selectFilter в форму\nexport const selectFilter = ({ filter }) => filter;\n\nexport const selectLoading = ({contacts: {isLoading}}) => isLoading;\nexport const selectError = ({contacts: {error}}) => error;\n\n//створюю масив відфільтрованних контактів та передаю у ContactList та ContactForm\nexport const selectVisibleContacts = ({ contacts: { items }, filter }) => {\n  if (!filter) {\n    return items;\n  }\n  return items.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import { Form } from '../StyledApp.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    addContactFind({ name, number });\n    form.reset();\n  };\n\n  const addContactFind = ({ name, number }) => {\n    if (\n      contacts.find(\n        item =>\n          item.name.toLowerCase() === name.toLowerCase() ||\n          item.number === number\n      )\n    ) {\n      return alert(\n        `${name} or ${number} is already in contacts`\n      );\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        {' '}\n        Name\n        <input\n          type=\"text\"\n          value={contacts.name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        {' '}\n        Phone number\n        <input\n          type=\"tel\"\n          value={contacts.number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { Label } from '../StyledApp.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\n//тут виконується пошук імені в телефонній книзі\n\nexport const Filter = () => {\n\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  \n  return (\n    <Label>\n      <label>\n        Find contacts by name\n        <input\n          type=\"name\"\n          value={filter}\n          onChange={e => dispatch(setFilter(e.currentTarget.value.trim()))}\n        />\n      </label>\n    </Label>\n  );\n};\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Ul } from '../StyledApp.styled';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\n// відображаю список контактів і маю можливість видаляти контакт зі списку\n\nexport const ContactList = () => {\n  const contactsList = useSelector(selectVisibleContacts)\n  //через dispatch видаляю контакти\n  const dispatch = useDispatch()\n  return (\n    <Ul>\n\n      {contactsList.map(\n        (\n          { name, phone, id } // кожен контакт має властивість name, number, id\n        ) => (\n          <li key={id}>\n            <p>\n              {name}: {phone}\n            </p>\n\n            <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </button>\n          </li>\n        )\n      )}\n    </Ul>\n  );\n};\n\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Div, H2 } from '../components/StyledApp.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport {\n  selectContacts,\n  selectError,\n  selectLoading,\n} from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  //додаю контакти з файлу  selectors.js\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  //  console.log(contacts)\n\n  return (\n    <>\n      <>\n        <Div>\n          <ContactForm />\n          {isLoading && <p>Loading</p>}\n          {error && <p>{error}</p>}\n          <H2>Contacts {contacts.length}</H2>\n          <Filter />\n          {contacts.length ? <ContactList /> : <p>No contacts in phonebook</p>}\n        </Div>\n      </>\n    </>\n  );\n}\n"],"names":["Div","styled","H2","Ul","Label","Form","selectContacts","contacts","items","selectFilter","filter","selectLoading","isLoading","selectError","error","selectVisibleContacts","item","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","addContactFind","number","find","alert","addContact","onSubmit","e","preventDefault","form","target","elements","value","reset","type","pattern","title","required","Filter","onChange","setFilter","currentTarget","trim","ContactList","contactsList","map","phone","id","onClick","deleteContact","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}